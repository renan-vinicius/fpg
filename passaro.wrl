#VRML V2.0 utf8  
# --------------------------------------------------------
# Passaro
# --------------------------------------------------------

DEF corpo Shape {  # corpo do passaro
	appearance Appearance {  # define a aparência do Shape
		material Material {
			diffuseColor 1.0 0.8 0.2    # r g b
        }
	}
	geometry Sphere {
		radius 4.0
        }
}  # fim do shape 

DEF bico Transform { # bico
    translation 2 0 0 
    rotation 0 0 1 80  # eixo e ângulo (em radianos) (1.57 = 90 graus)
    scale 2 2 2 
    children [  
		Shape {  # fazer o bico
			appearance Appearance {  # define a aparência do Shape
				material Material {
					diffuseColor 0.8 0.5 0.2    # r g b
		        }
			}
			geometry Cone {
				bottomRadius 1.0   # raio da base
				height 5.0         # altura
				side TRUE          # tem a lateral ?
				bottom TRUE        # tem a base ?
			}
		}  # fim do shape 
		]
}



DEF patas Group{

	children[

	DEF tr_patas Transform {
		children[

			DEF pata1 Transform { # pata
		    translation 0 -3 2 
		    rotation 0 0 0 0  # eixo e ângulo (em radianos) (1.57 = 90 graus)
		    scale 1 1 1 
		    children [  
				Shape {  # fazer o bico
					appearance Appearance {  # define a aparência do Shape
						material Material {
							diffuseColor 0.8 0.5 0.2    # r g b
				        }
					}
					
					geometry Cylinder {
						radius 0.5   # raio
						height 4.0   # altura
						side TRUE    # tem a lateral ?
						top TRUE     # tem a parte de cima ?
						bottom TRUE  # tem a parte de baixo ?
					}
				}  # fim do shape 
				]
			}

			DEF pata2 Transform { # pata
			    translation 0 -3 -2 
			    rotation 0 0 0 0  # eixo e ângulo (em radianos) (1.57 = 90 graus)
			    scale 1 1 1 
			    children [  
					Shape {  # fazer o bico
						appearance Appearance {  # define a aparência do Shape
							material Material {
								diffuseColor 0.8 0.5 0.2    # r g b
					        }
						}
						
						geometry Cylinder {
							radius 0.5   # raio
							height 4.0   # altura
							side TRUE    # tem a lateral ?
							top TRUE     # tem a parte de cima ?
							bottom TRUE  # tem a parte de baixo ?
						}
					}  # fim do shape 
					]
			}

			DEF patas_sensor TouchSensor {}
			]
		}
	]	
}

DEF asas Group{

	children[

		DEF tr_asas Transform {
			children[
				DEF asa1 Transform { # asa1
			    translation 1 0 4.5 
			    rotation -5 0 2 80  # eixo e ângulo (em radianos) (1.57 = 90 graus)
			    scale 2 2 2 
			    children [  
					Shape {  # fazer o bico
						appearance Appearance {  # define a aparência do Shape
							material Material {
								diffuseColor 1.0 0.8 0.2    # r g b
					        }
						}
						geometry Cone {
							bottomRadius 1.0   # raio da base
							height 2.0         # altura
							side TRUE          # tem a lateral ?
							bottom TRUE        # tem a base ?
						}
					}  # fim do shape 
						
					]
			}

			DEF asa2 Transform { # asa1
			    translation -1 0 -4.5 
			    rotation 5 0 -2 80  # eixo e ângulo (em radianos) (1.57 = 90 graus)
			    scale 2 2 2 
			    children [  
					Shape {  # fazer o bico
						appearance Appearance {  # define a aparência do Shape
							material Material {
								diffuseColor 1.0 0.8 0.2    # r g b
					        }
						}
						geometry Cone {
							bottomRadius 1.0   # raio da base
							height 2.0         # altura
							side TRUE          # tem a lateral ?
							bottom TRUE        # tem a base ?
						}
					}  # fim do shape 
					]
			}

				DEF asas_sensor TouchSensor {}
			]
		}
	]	
}


DEF timer_asas TimeSensor {
	cycleInterval 8
	loop FALSE
}

DEF pi_asas PositionInterpolator {
	key [ 0 1 ]
	keyValue [0,0,0, 1,1,1]
}

DEF oi_asas OrientationInterpolator {
	key [0 0.157 0.314 0.471 0.628 0.785 0.942 1]
	keyValue [ 0 0 1 0, 0 0 1 -3.14, 0 0 1 -6.28, 0 0 1  -9.42, 0 0 1 -12.56, 
			0 0 1 -15.7, 0 0 1 -18.84, 0 0 1 -20.0 ]
}

DEF si_asas ScalarInterpolator {
	key [ 0 0.5 1]
	keyValue [0 1 0]
}

DEF timer_patas TimeSensor {
	cycleInterval 5
	loop FALSE
}



DEF pi_patas PositionInterpolator {
	key [ 0 1 ]
	keyValue [0,0,0, 0,1,0]
}

DEF oi_patas OrientationInterpolator {
	key [0 0.157 0.314 0.471 0.628 0.785 0.942 1]
	keyValue [ 0 0 1 0, 0 0 1 -3.14, 0 0 1 -6.28, 0 0 1  -9.42, 0 0 1 -12.56, 
			0 0 1 -15.7, 0 0 1 -18.84, 0 0 1 -20.0 ]
}

DEF si_patas ScalarInterpolator {
	key [ 0 0.5 1]
	keyValue [1 0 0]
}



ROUTE asas_sensor.touchTime TO timer_asas.set_startTime
ROUTE timer_asas.fraction_changed TO si_asas.set_fraction
ROUTE si_asas.value_changed TO pi_asas.set_fraction
ROUTE pi_asas.value_changed TO tr_asas.set_translation
ROUTE si_asas.value_changed TO oi_asas.set_fraction
ROUTE oi_asas.value_changed TO tr_asas.set_rotation


ROUTE patas_sensor.touchTime TO timer_patas.set_startTime
ROUTE timer_patas.fraction_changed TO si_patas.set_fraction
ROUTE si_patas.value_changed TO pi_patas.set_fraction
ROUTE pi_patas.value_changed TO tr_patas.set_translation
ROUTE si_patas.value_changed TO oi_patas.set_fraction
ROUTE oi_patas.value_changed TO tr_patas.set_rotation


